FROM php:7.0-fpm

MAINTAINER taoanton@gmail.com

# Add aliyun repository
RUN echo "deb http://mirrors.aliyun.com/debian/ jessie main non-free contrib" > /etc/apt/sources.list
RUN echo "deb http://mirrors.aliyun.com/debian/ jessie-proposed-updates main non-free contrib" >> /etc/apt/sources.list
RUN echo "deb-src http://mirrors.aliyun.com/debian/ jessie main non-free contrib" >> /etc/apt/sources.list
RUN echo "deb-src http://mirrors.aliyun.com/debian/ jessie-proposed-updates main non-free contrib" >> /etc/apt/sources.list

# Get repository and install wget and vim
RUN apt-get update && apt-get install --no-install-recommends -y \
        wget \
        vim \
        git \
        unzip \
        g++ \
        libfreetype6-dev \
        libjpeg62-turbo-dev \
        libmcrypt-dev \
        libpng12-dev \
        zlib1g-dev \
        libicu-dev \
        unixodbc-dev \
        libxml2-dev \
        libaio-dev \
        libmemcached-dev \
        freetds-dev

# Install Oracle Instantclient
RUN mkdir /opt/oracle \
    && cd /opt/oracle \
    && wget http://repo.domain.com/pkg/instantclient-basic-linux.x64-12.1.0.2.0.zip \
    && wget http://repo.domain.com/pkg/instantclient-sdk-linux.x64-12.1.0.2.0.zip \
    && unzip /opt/oracle/instantclient-basic-linux.x64-12.1.0.2.0.zip -d /opt/oracle \
    && unzip /opt/oracle/instantclient-sdk-linux.x64-12.1.0.2.0.zip -d /opt/oracle \
    && ln -s /opt/oracle/instantclient_12_1/libclntsh.so.12.1 /opt/oracle/instantclient_12_1/libclntsh.so \
    && ln -s /opt/oracle/instantclient_12_1/libclntshcore.so.12.1 /opt/oracle/instantclient_12_1/libclntshcore.so \
    && ln -s /opt/oracle/instantclient_12_1/libocci.so.12.1 /opt/oracle/instantclient_12_1/libocci.so \
    && rm -rf /opt/oracle/*.zip \
    && echo 'instantclient,/opt/oracle/instantclient_12_1/' | pecl install oci8-2.1.1 \
    && docker-php-ext-configure pdo_oci --with-pdo-oci=instantclient,/opt/oracle/instantclient_12_1,12.1 

# Install PHP extensions
# RUN requirements="libmcrypt-dev g++ libicu-dev libfreetype6-dev libjpeg62-turbo-dev libpng12-dev libsqlite3-dev libssl-dev libcurl3-dev libxml2-dev libzzip-dev" \
RUN docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
    && pecl install xdebug \
    && pecl install yaf \
    && pecl install mongodb \
    && echo "extension=mongodb.so" > $PHP_INI_DIR/conf.d/mongodb.ini \
    && docker-php-ext-configure pdo_dblib --with-libdir=/lib/x86_64-linux-gnu \
    && rm -rf /var/lib/apt/lists/* \
    && docker-php-ext-install \
         pdo_mysql \
         pdo_oci \
         mcrypt \
         mysqli \
         xmlrpc \
         zip \
         intl \
         gd \
    && docker-php-ext-configure gd --with-freetype-dir=/usr/include/ --with-jpeg-dir=/usr/include/ \
    && docker-php-ext-enable \
            oci8 \
            xdebug \
            yaf \
            opcache \
    && requirementsToRemove="g++" \
    && apt-get purge --auto-remove -y $requirementsToRemove

# Add custom settings
RUN touch /usr/local/etc/php/conf.d/custom_settings.ini \
    && echo "display_errors = On" >> /usr/local/etc/php/conf.d/custom_settings.ini \
    && echo "expose_php = Off" >> /usr/local/etc/php/conf.d/custom_settings.ini \
    && echo "upload_max_filesize = 128M" >> /usr/local/etc/php/conf.d/custom_settings.ini \
    && echo "post_max_size = 128M" >> /usr/local/etc/php/conf.d/custom_settings.ini \
    && echo "date.timezone = "Asia/Shanghai"" >> /usr/local/etc/php/conf.d/custom_settings.ini \
    # 用完包管理器后安排打扫卫生可以显著的减少镜像大小
    && apt-get clean \
    && apt-get autoclean \
    && rm -rf /var/lib/apt/lists/* /tmp/* /var/tmp/*


# Install swoole
COPY swoole-1.8.9.tgz /home/swoole.tgz
RUN pecl install /home/swoole.tgz && echo "extension=swoole.so" > /usr/local/etc/php/conf.d/swoole.ini 
# RUN pecl install /home/mongodb.tgz && echo "extension=mongodb.so" >> /usr/local/etc/php/php.ini

# COPY mongodb.tar.gz /home/mongodb.tar.gz
# RUN cd /home/ && tar -zxvf mongodb.tar.gz \
# && cd /home/mongo-php-driver \
# && phpize \
# && ./configure \
# && make all  \
# && make install \
# && docker-php-ext-enable mongodb \
# && rm -rf /home/mongo-php-driver

# install phalcon
COPY phalcon-v3.0.1.tar.gz /home/phalcon.tar.gz
RUN cd /home/ && tar -zxf phalcon.tar.gz \
# && cd /home/cphalcon-3.0.1/build/php7/64bits \
# && export CFLAGS="-O2 -g" \
# && phpize \
# && ./configure --enable-phalcon \
# && make \
# && make install \
&& cd /home/cphalcon-3.0.1/build \
&& ./install \
&& docker-php-ext-enable phalcon \
&& rm -rf /home/cphalcon

# PHP config
ADD php.ini    /usr/local/etc/php/php.ini
ADD php-fpm.conf    /usr/local/etc/php-fpm.conf

# Composer
ADD composer.phar /usr/local/bin/composer
RUN chmod 755 /usr/local/bin/composer

WORKDIR /opt

RUN  chown -R www-data:www-data /opt

# Write Permission
RUN usermod -u 1000 www-data

# log files
RUN  mkdir -p /usr/local/etc/logs/
RUN  touch /usr/local/etc/logs/fpm-access.log /usr/local/etc/logs/fpm-error.log
RUN  touch /usr/local/etc/logs/php-slow.log

# ADD ffmpeg
# ADD ffmpeg /usr/local/bin/ffmpeg
# ADD ffmpeg-10bit /usr/local/bin/ffmpeg-10bit
# ADD ffprobe /usr/local/bin/ffprobe


EXPOSE 9000
VOLUME ["/opt"]
CMD ["php-fpm"]
